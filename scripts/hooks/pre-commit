#!/bin/bash
# Pre-commit hook for Artemis - Comprehensive validation suite
#
# WHY: Prevents committing code with syntax errors, import issues, or signature mismatches
# PATTERNS: Defense in depth (multiple validation layers), fail-fast (exit on first error)
#
# To install: Run scripts/install-hooks.sh

set -e

echo "üîç Running Artemis validation suite..."
echo ""

# Get staged Python files
STAGED_PY_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.py$' || true)

# Guard: No Python files to check
if [ -z "$STAGED_PY_FILES" ]; then
    echo "‚ÑπÔ∏è  No Python files to check"
    echo "‚úÖ Pre-commit checks complete"
    exit 0
fi

echo "üìù Checking $(echo "$STAGED_PY_FILES" | wc -l) Python files..."
echo ""

# ============================================================
# STEP 1: Code Standards Scanner
# ============================================================
echo "üîç [1/3] Running code standards checks..."

if ! python3 src/code_standards_scanner.py --root src --exit-code; then
    echo ""
    echo "‚ùå CODE STANDARDS VIOLATION DETECTED"
    echo ""
    echo "Your commit has been blocked because it violates claude.md coding standards."
    echo "This includes:"
    echo "  - Nested if statements (use early returns)"
    echo "  - Long if/elif chains (use strategy pattern or dict mapping)"
    echo "  - TODO comments in production code"
    echo ""
    echo "To fix:"
    echo "  1. Review the violations above"
    echo "  2. Refactor using patterns from claude.md and REFACTORING_GUIDE.md"
    echo "  3. Run: python3 src/code_standards_scanner.py --root src"
    echo "  4. Fix all violations"
    echo "  5. Try committing again"
    echo ""
    exit 1
fi

echo "  ‚úÖ Code standards passed"
echo ""

# ============================================================
# STEP 2: Preflight Validation (Syntax + Imports + Signatures)
# ============================================================
echo "üîç [2/3] Running preflight validation..."
echo "  - Syntax checking"
echo "  - Import testing (circular dependency detection)"
echo "  - Function signature validation (parameter mismatches)"
echo ""

if ! python3 src/preflight_validator.py src; then
    echo ""
    echo "‚ùå PREFLIGHT VALIDATION FAILED"
    echo ""
    echo "Your commit has been blocked due to validation errors."
    echo "This may include:"
    echo "  - Syntax errors (compilation failures)"
    echo "  - Circular imports or import errors"
    echo "  - Function signature mismatches (wrong parameters)"
    echo ""
    echo "To fix:"
    echo "  1. Review the errors above"
    echo "  2. Fix the specific issues identified"
    echo "  3. Run: python3 src/preflight_validator.py src"
    echo "  4. Ensure all validation passes"
    echo "  5. Try committing again"
    echo ""
    exit 1
fi

echo "  ‚úÖ Preflight validation passed"
echo ""

# ============================================================
# STEP 3: Signature Validation (Detailed Check)
# ============================================================
echo "üîç [3/3] Running signature validation..."

if ! python3 src/signature_validator.py src; then
    echo ""
    echo "‚ùå SIGNATURE VALIDATION FAILED"
    echo ""
    echo "Your commit has been blocked due to function signature mismatches."
    echo "This includes:"
    echo "  - Too many/few arguments to functions"
    echo "  - Unknown keyword arguments"
    echo "  - Missing required parameters"
    echo ""
    echo "To fix:"
    echo "  1. Review the signature mismatches above"
    echo "  2. Check function definitions match call sites"
    echo "  3. Run: python3 src/signature_validator.py src"
    echo "  4. Fix all signature issues"
    echo "  5. Try committing again"
    echo ""
    exit 1
fi

echo "  ‚úÖ Signature validation passed"
echo ""

# ============================================================
# ALL CHECKS PASSED
# ============================================================
echo "‚úÖ All validation checks passed!"
echo ""
echo "Summary:"
echo "  ‚úì Code standards compliant"
echo "  ‚úì No syntax errors"
echo "  ‚úì No import errors or circular dependencies"
echo "  ‚úì No signature mismatches"
echo ""
echo "To bypass these checks (NOT RECOMMENDED):"
echo "  git commit --no-verify"
echo ""

exit 0

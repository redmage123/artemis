[pytest]
# Pytest configuration for Artemis validation system

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    --showlocals
    # Short traceback format
    --tb=short
    # Coverage configuration
    --cov=stages
    --cov=services
    --cov=validated_developer
    --cov=validation_pipeline
    # Coverage reporting
    --cov-report=term-missing
    --cov-report=html:htmlcov
    # Fail if coverage drops below thresholds
    --cov-fail-under=75
    # Show warnings
    -W default
    # Strict markers
    --strict-markers

# Test paths
testpaths = src

# Markers (for categorizing tests)
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, multiple components)
    slow: Slow tests (require external services or large datasets)
    validation: Validation system tests
    regression: Regression tests for specific bugs

# Coverage options
[coverage:run]
source = src
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    */.venv/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    pass

# Target coverage thresholds
precision = 2
skip_empty = True
sort = Cover

[coverage:html]
directory = htmlcov
